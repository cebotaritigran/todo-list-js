(()=>{"use strict";function e(e,t,n){const o=new class{constructor(e,t,n){this.title=e,this.description=t,this.date=n}}(e,t,n);return o}let t=[];let n=[],o=[];function c(t){document.querySelector(".form").addEventListener("submit",(n=>{!function(t,n){const c=document.querySelector("#title").value,r=document.querySelector("#description").value,d=document.querySelector("#date").value;let i;o[n].push(e(c,r,d)),i=o[n];const l=document.createTextNode(i[i.length-1].title),u=document.createTextNode(i[i.length-1].description),a=document.createTextNode(i[i.length-1].date),p=document.createElement("p"),s=document.createElement("p"),m=document.createElement("p");p.appendChild(l),s.appendChild(u),m.appendChild(a),document.querySelector(".todos").append(p,s,m),t.preventDefault()}(n,t)}))}!function(){const n=document.querySelector(".content");document.querySelector(".todo-tab").addEventListener("click",(()=>{n.replaceChildren(),n.innerHTML+='<div class="main-todo-list">\n        <div class="form-container">\n            <form autocomplete="off" class="form">\n                <input id="title" type="text" placeholder="Title" minlength="3" maxlength="40" required>\n                <input id="description" type="text" placeholder="description" minlength="3" required>\n                <input id="date" type="date" placeholder="date" required>\n                <button class="book-add-button" type="submit">Submit</button>\n            </form>\n        </div>\n        <div class="todos"></div>';const o=document.querySelector(".todos");if(t.length>0)for(let e=0;e<t.length;e++)o.innerHTML+=`<p>${t[e].title}</p>`,o.innerHTML+=`<p>${t[e].description}</p>`,o.innerHTML+=`<p>${t[e].date}</p>`;document.querySelector(".form").addEventListener("submit",(n=>{!function(n){const o=document.querySelector("#title").value,c=document.querySelector("#description").value,r=document.querySelector("#date").value;t.push(e(o,c,r));const d=document.createTextNode(t[t.length-1].title),i=document.createTextNode(t[t.length-1].description),l=document.createTextNode(t[t.length-1].date),u=document.createElement("p"),a=document.createElement("p"),p=document.createElement("p");u.appendChild(d),a.appendChild(i),p.appendChild(l),document.querySelector(".todos").append(u,a,p),n.preventDefault()}(n)}))}))}(),document.querySelector(".project").addEventListener("submit",(e=>{!function(e){const t=document.querySelector("#project").value;n.push(function(e){const t=new class{constructor(e){this.title=e}}(e);return t}(t)),document.querySelector(".projects").innerHTML+=`<div class="project-title" value="${n.length-1}">${n[n.length-1].title}</div>`,o.push([]),function(){const e=document.querySelector(".content"),t=document.querySelectorAll(".project-title");for(let n=0;n<t.length;n++)t[n].addEventListener("click",(()=>{e.replaceChildren();let r=parseInt(t[n].getAttribute("value"));e.innerHTML+='<div class="main-todo-list">\n        <div class="form-container">\n            <form autocomplete="off" class="form">\n                <input id="title" type="text" placeholder="Title" minlength="3" maxlength="40" required>\n                <input id="description" type="text" placeholder="description" minlength="3" required>\n                <input id="date" type="date" placeholder="date" required>\n                <button class="book-add-button" type="submit">Submit</button>\n            </form>\n        </div>\n        <div class="todos"></div>';const d=document.querySelector(".todos");if(o[r].length>0)for(let e=0;e<o[r].length;e++)d.innerHTML+=`<p>${o[r][e].title}</p>`,d.innerHTML+=`<p>${o[r][e].description}</p>`,d.innerHTML+=`<p>${o[r][e].date}</p>`;c(r)}))}(),e.preventDefault()}(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,