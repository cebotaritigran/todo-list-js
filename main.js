(()=>{"use strict";let e=[];let t=[];!function(){const t=document.querySelector(".content");document.createElement("node"),document.querySelector(".todo-tab").addEventListener("click",(()=>{t.replaceChildren(),t.innerHTML+='<div class="main-todo-list">\n        <div class="form-container">\n            <form autocomplete="off" class="form">\n                <input id="title" type="text" placeholder="Title" minlength="3" maxlength="40" required>\n                <input id="description" type="text" placeholder="description" minlength="3" required>\n                <input id="date" type="date" placeholder="date" required>\n                <button class="book-add-button" type="submit">Submit</button>\n            </form>\n        </div>\n        <div class="todos"></div>';const n=document.querySelector(".todos");if(e.length>0)for(let t=0;t<e.length;t++)n.innerHTML+=`<p>${e[t].title}</p>`,n.innerHTML+=`<p>${e[t].description}</p>`,n.innerHTML+=`<p>${e[t].date}</p>`;document.querySelector(".form").addEventListener("submit",(t=>{!function(t){const n=document.querySelector("#title").value,o=document.querySelector("#description").value,c=document.querySelector("#date").value;e.push(function(e,t,n){const o=new class{constructor(e,t,n){this.title=e,this.description=t,this.date=n}}(e,t,n);return o}(n,o,c));const r=document.createTextNode(e[e.length-1].title),d=document.createTextNode(e[e.length-1].description),i=document.createTextNode(e[e.length-1].date),l=document.createElement("p"),u=document.createElement("p"),s=document.createElement("p");l.appendChild(r),u.appendChild(d),s.appendChild(i),document.querySelector(".todos").append(l,u,s),t.preventDefault()}(t)}))}))}(),document.querySelector(".project").addEventListener("submit",(e=>{!function(e){const n=document.querySelector("#project").value;t.push(function(e){const t=new class{constructor(e){this.title=e}}(e);return t}(n)),document.querySelector(".projects").innerHTML+=`<div class="project-title" value="${t.length-1}">${t[t.length-1].title}</div>`,e.preventDefault()}(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,